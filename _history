{"entries":[{"timestamp":1739410355489,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":75},{"diffs":[[0,"ver\""],[-1," x=\"0\" y=\"0\""],[0,"></b"]],"start1":107,"start2":107,"length1":20,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"basic.forever(function () {\n\t\n})"],[0,"\n"]],"start1":0,"start2":0,"length1":33,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,".md\""],[-1,",\n        \"MoarTypes.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\""],[1,"\n    ],\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":220,"start2":220,"length1":69,"length2":44}]},{"type":"added","filename":"MoarTypes.ts","value":"\n/**\n* Use this file to define custom functions and blocks.\n* Read more at https://makecode.microbit.org/blocks/custom\n*/\n\nenum MyEnum {\n    //% block=\"one\"\n    One,\n    //% block=\"two\"\n    Two\n}\n\ninterface vector2{\n    x : number;\n    y : number;\n\n    \n}\n\n/**\n * Custom blocks\n */\n//% weight=100 color=#0fbc11 icon=\"\\f5cb\"\nnamespace MoarTypes {\n    /**\n     * TODO: describe your function here\n     * @param n describe parameter here, eg: 5\n     * @param s describe parameter here, eg: \"Hello\"\n     * @param e describe parameter here\n     */\n    //% block\n    export function foo(n: number, s: string, e: MyEnum): void {\n        // Add code here\n    }\n\n    /**\n     * TODO: describe your function here\n     * @param value describe value here, eg: 5\n     */\n    //% block\n    export function fib(value: number): number {\n        return value <= 1 ? value : fib(value -1) + fib(value - 2);\n    }\n}\n"}]},{"timestamp":1739410907223,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"es><"],[-1,"variable id=\"IjU__gu#[XN#(o+Ru6Q,\">test</variable></variables><block type=\"device_forever\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"IjU__gu#[XN#(o+Ru6Q,\">test</field></block></statement"],[1,"/variables><block type=\"device_forever\" x=\"0\" y=\"0\""],[0,"></b"]],"start1":63,"start2":63,"length1":240,"length2":59}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"let test = 0\n"],[0,"basi"]],"start1":0,"start2":0,"length1":17,"length2":4},{"diffs":[[0,") {\n"],[-1,"    test = 0"],[1,"\t"],[0,"\n})\n"]],"start1":24,"start2":24,"length1":20,"length2":9}]},{"type":"edited","filename":"MoarTypes.ts","patch":[{"diffs":[[1,"\n/**\n* Use this file to define custom functions and blocks.\n* Read more at https://makecode.microbit.org/blocks/custom\n*/\n\nenum MyEnum {\n    //% block=\"one\"\n    One,\n    //% block=\"two\"\n    Two\n}\n\ninterface vector2{\n    x : number;\n    y : number;\n\n    \n}\n\n/**\n * Custom blocks\n */\n//% weight=100 color=#0fbc11 icon=\"\\f5cb\"\nnamespace MoarTypes {\n    /**\n     * TODO: describe your function here\n     * @param n describe parameter here, eg: 5\n     * @param s describe parameter here, eg: \"Hello\"\n     * @param e describe parameter here\n     */\n    //% block\n    export function foo(n: number, s: string, e: MyEnum): void {\n        // Add code here\n    }\n\n    /**\n     * TODO: describe your function here\n     * @param value describe value here, eg: 5\n     */\n    //% block\n    export function fib(value: number): number {\n        return value <= 1 ? value : fib(value -1) + fib(value - 2);\n    }\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":897}]}]},{"timestamp":1739411522073,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"MoarTypes.ts","patch":[{"diffs":[[-1,"\n/**\n* Use this file to define custom functions and blocks.\n* Read more at https://makecode.microbit.org/blocks/custom\n*/\n\nenum MyEnum {\n    //% block=\"one\"\n    One,\n    //% block=\"two\"\n    Two\n}\n\n/**\n * Custom blocks\n */\n//% weight=100 color=#0fbc11 icon=\"\"\nnamespace custom {\n    /**\n     * TODO: describe your function here\n     * @param n describe parameter here, eg: 5\n     * @param s describe parameter here, eg: \"Hello\"\n     * @param e describe parameter here\n     */\n    //% block\n    export function foo(n: number, s: string, e: MyEnum): void {\n        // Add code here\n    }\n\n    /**\n     * TODO: describe your function here\n     * @param value describe value here, eg: 5\n     */\n    //% block\n    export function fib(value: number): number {\n        return value <= 1 ? value : fib(value -1) + fib(value - 2);\n    }\n}\n"]],"start1":0,"start2":0,"length1":830,"length2":0}]}]},{"timestamp":1739411522078,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"ble id=\""],[-1,"(DPnh_5heYr:^`[wP6x;"],[1,"IjU__gu#[XN#(o+Ru6Q,"],[0,"\">test</"]],"start1":72,"start2":72,"length1":36,"length2":36},{"diffs":[[0," x=\""],[-1,"2"],[0,"0\" y=\""],[-1,"2"],[0,"0\"><"]],"start1":157,"start2":157,"length1":16,"length2":14},{"diffs":[[0,"id=\""],[-1,"(DPnh_5heYr:^`[wP6x;\">test</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value"],[1,"IjU__gu#[XN#(o+Ru6Q,\">test</field"],[0,"></b"]],"start1":242,"start2":242,"length1":132,"length2":41}]},{"type":"edited","filename":"MoarTypes.ts","patch":[{"diffs":[[-1,"interface Vector2{\n    X : number;\n    Y : number;"],[1,"\n/**\n* Use this file to define custom functions and blocks.\n* Read more at https://makecode.microbit.org/blocks/custom\n*/\n\nenum MyEnum {\n    //% block=\"one\"\n    One,\n    //% block=\"two\"\n    Two"],[0,"\n}\n"],[1,"\n"],[0,"/**\n * "],[-1,"Allows for some more types to be used"],[1,"Custom blocks"],[0,"\n */"]],"start1":0,"start2":0,"length1":101,"length2":221},{"diffs":[[0,"or=#"],[-1,"751AE4"],[1,"0fbc11"],[0," icon=\""],[-1,"\" block=\"MoarTypes\"\n//% groups=['Vector2', 'Control flow', 'others']\nnamespace MoarTypes {\n    /**\n     * MoarTypes : Makes A New Vector2\n     */\n    //% block\n    export function NewVector2(x: number, y : number): Vector2 {\n        let obj = {X: x, Y : y}\n        return obj"],[1,"\"\nnamespace custom {\n    /**\n     * TODO: describe your function here\n     * @param n describe parameter here, eg: 5\n     * @param s describe parameter here, eg: \"Hello\"\n     * @param e describe parameter here\n     */\n    //% block\n    export function foo(n: number, s: string, e: MyEnum): void {\n        // Add code here\n    }\n\n    /**\n     * TODO: describe your function here\n     * @param value describe value here, eg: 5\n     */\n    //% block\n    export function fib(value: number): number {\n        return value <= 1 ? value : fib(value -1) + fib(value - 2);"],[0,"\n    }\n"],[-1,"\n"],[0,"}\n"]],"start1":240,"start2":240,"length1":302,"length2":590}]}]},{"timestamp":1739412121038,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0," x=\""],[1,"2"],[0,"0\" y=\""],[1,"2"],[0,"0\"><"]],"start1":157,"start2":157,"length1":14,"length2":16},{"diffs":[[0,"ow><"],[-1,"block type=\"MoarTypes_YOf\"><value name=\"vector\"><block type=\"MoarTypes_NewVector2\"><value name=\"x\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value><value name=\"y\"><shadow type=\"math_number\"><field name=\"NUM\">5</field></shadow></value></block></value></block><"],[0,"/val"]],"start1":362,"start2":362,"length1":290,"length2":8}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"t = "],[-1,"MoarTypes.YOf(MoarTypes.NewVector2(0, 5))"],[1,"0"],[0,"\n})\n"]],"start1":48,"start2":48,"length1":49,"length2":9}]},{"type":"edited","filename":"MoarTypes.ts","patch":[{"diffs":[[0,"mber;\n}\n"],[-1,"\n\n"],[0,"/**\n * A"]],"start1":45,"start2":45,"length1":18,"length2":16},{"diffs":[[0," icon=\"\""],[1," block=\"MoarTypes\"\n//% groups=['Vector2', 'Control flow', 'others']"],[0,"\nnamespa"]],"start1":130,"start2":130,"length1":16,"length2":83},{"diffs":[[0,"Types {\n"],[-1,"\n"],[0,"    /**\n"]],"start1":220,"start2":220,"length1":17,"length2":16},{"diffs":[[0," }\n\n"],[-1,"    /**\n     * Gets the X of a Vector\n     */\n    //% block\n    export function XOf(vector : Vector2): number {\n        return vector.X\n    }\n\n    /**\n    * Gets the Y of a Vector\n    */\n    //% block\n    export function YOf(vector: Vector2): number {\n        return vector.Y\n    }\n"],[0,"}\n"]],"start1":416,"start2":416,"length1":288,"length2":6}]}]},{"timestamp":1739412651238,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"iables><"],[1,"block type=\"device_forever\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"(DPnh_5heYr:^`[wP6x;\">test</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"MoarTypes_YOf\"><value name=\"vector\"><block type=\"MoarTypes_NewVector2\"><value name=\"x\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value><value name=\"y\"><shadow type=\"math_number\"><field name=\"NUM\">5</field></shadow></value></block></value></block></value></block></statement></block><"],[0,"/xml>"]],"start1":122,"start2":122,"length1":13,"length2":565}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":252,"start2":252,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1739410355488,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"MoarTypes\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1739412191156,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"(DPnh_5heYr:^`[wP6x;\">test</variable></variables><block type=\"device_forever\" x=\"20\" y=\"20\"><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"(DPnh_5heYr:^`[wP6x;\">test</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value></block></statement></block></xml>","main.ts":"let test = 0\nbasic.forever(function () {\n    test = 0\n})\n","README.md":"","MoarTypes.ts":"interface Vector2{\n    X : number;\n    Y : number;\n}\n/**\n * Allows for some more types to be used\n */\n//% weight=100 color=#751AE4 icon=\"\" block=\"MoarTypes\"\n//% groups=['Vector2', 'Dictionary']\nnamespace MoarTypes {\n    /**\n     * MoarTypes : Makes A New Vector2\n     */\n    //% block\n    export function NewVector2(x: number, y : number): Vector2 {\n        let obj = {X: x, Y : y}\n        return obj\n    }\n\n}\n","pxt.json":"{\n    \"name\": \"MoarTypes\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"MoarTypes.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1739412752612}